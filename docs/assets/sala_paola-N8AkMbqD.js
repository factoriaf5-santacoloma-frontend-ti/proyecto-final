import{A as ve}from"./aframe-master-BqMUpO3Y.js";import"./index-D66LEcnl.js";var V={},N={},U={},I;function me(){if(I)return U;I=1;var s=new THREE.Vector2;return AFRAME.registerSystem("effects",{schema:{type:"array",default:[]},init:function(){this.effects={},this.passes=[],this._passes=[],this.cameras=[],this.setupPostState(),this.needsOverride=!0,this.lightComponents=[],this.LightState={rows:0,cols:0,width:0,height:0,tileData:{value:null},tileTexture:{value:null},lightTexture:{value:new THREE.DataTexture(new Float32Array(32*2*4),32,2,THREE.RGBAFormat,THREE.FloatType)}}},update:function(){this.needsUpdate=!0},addLight:function(i){this.lightComponents.push(i)},removeLight:function(i){var a=this.lightComponents.indexOf(i);this.lightComponents.splice(a)},setupPostState:function(){this.renderTarget=new THREE.WebGLRenderTarget(1,1,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),this.renderTarget.texture.generateMipmaps=!1,this.renderTarget.depthBuffer=!0,this.renderTarget.depthTexture=new THREE.DepthTexture,this.renderTarget.depthTexture.type=THREE.UnsignedShortType,this.renderTarget.depthTexture.minFilter=THREE.LinearFilter,this.renderTarget.stencilBuffer=!1,this.scene=new THREE.Scene,this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.quad.frustumCulled=!1,this.scene.add(this.quad),this.sceneLeft=new THREE.Scene,this.quadLeft=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.quadLeft.geometry.attributes.uv.array.set([0,1,.5,1,0,0,.5,0]),this.quadLeft.frustumCulled=!1,this.sceneLeft.add(this.quadLeft),this.sceneRight=new THREE.Scene,this.quadRight=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.quadRight.geometry.attributes.uv.array.set([.5,1,1,1,.5,0,1,0]),this.quadRight.frustumCulled=!1,this.sceneRight.add(this.quadRight),this.targets=[new THREE.WebGLRenderTarget(1,1,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),new THREE.WebGLRenderTarget(1,1,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat})],this.tDiffuse={type:"t",value:null},this.tDepth={type:"t",value:this.renderTarget.depthTexture},this.cameraFar={type:"f",value:0},this.cameraNear={type:"f",value:0},this.time={type:"f",value:0},this.timeDelta={type:"f",value:0},this.uvClamp={type:"v2",value:this.uvBoth},this.resolution={type:"v4",value:new THREE.Vector4}},vertexShader:["#include <common>","varying vec2 vUv;","void main() {","   vUv = uv;","   gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join(`
`),uvLeft:new THREE.Vector2(0,.5),uvRight:new THREE.Vector2(.5,1),uvBoth:new THREE.Vector2(0,1),parseToken:/([#a-z0-9\-\_]+)\.{0,1}([#a-z0-9\-\_]*)\s*\({0,1}\s*([\$a-z0-9\-\_\.\s]*)\){0,1}([\!\?]{0,1})/i,renderPass:function(i,a,t,e){var r=this.sceneEl.renderer;this.quad.material=i;var n=typeof t=="function",o=a||r.getSize(s);this.resolution.value.set(o.width||s.x,o.height||s.y,1/(o.width||s.x),1/(o.height||s.y));var l=r.autoClear;r.autoClear=!1,t?this.cameras.length>1?(this.quadLeft.material=i,this.uvClamp.value=this.uvLeft,u(0,0,Math.round(o.width*.5),o.height),n&&t(i,this.cameras[0],-1),r.setRenderTarget(a),r.render(this.sceneLeft,this.camera),r.setRenderTarget(null),this.quadRight.material=i,this.uvClamp.value=this.uvRight,u(Math.round(o.width*.5),0,Math.round(o.width*.5),o.height),n&&t(i,this.cameras[1],1),r.setRenderTarget(a),r.render(this.sceneRight,this.camera),r.setRenderTarget(null),this.uvClamp.value=this.uvBoth,u(0,0,o.width,o.height)):(u(0,0,o.width,o.height),n&&t(i,this.sceneEl.camera,0),r.setRenderTarget(a),r.render(this.scene,this.camera),r.setRenderTarget(null)):(u(0,0,o.width,o.height),r.setRenderTarget(a),r.render(this.scene,this.camera),r.setRenderTarget(null)),r.autoClear=l;function u(m,h,c,p){a?(a.viewport.set(m,h,c,p),a.scissor.set(m,h,c,p)):(r.setViewport(m,h,c,p),r.setScissor(m,h,c,p))}},materialize:function(i){var a=["uniform vec2 uvClamp;","vec4 textureVR( sampler2D sampler, vec2 uv ) {"," return texture2D(sampler, vec2(clamp(uv.x, uvClamp.x, uvClamp.y), uv.y));","} ",i.fragmentShader].join(`
`);return i.uniforms.uvClamp=this.uvClamp,new THREE.ShaderMaterial({uniforms:i.uniforms,vertexShader:i.vertexShader||this.vertexShader,fragmentShader:a,depthWrite:!1,depthTest:!1,blending:THREE.NoBlending,fog:!1,extensions:{derivatives:!0},defines:i.defines||{}})},fuse:function(i,a){if(i.length){var t=this,e=0,r=[],n=[],o=[],l={},u=!1,m=!1,h,c={time:this.time,timeDelta:this.timeDelta,resolution:this.resolution};i.forEach(function(f){var R=!0,b=!1,P=[];if(typeof f=="string"){var x=t.parseToken.exec(f);if(!x)return;R=x[4]!=="!",b=x[4]==="?",f=x[1];var T=x[2];if(f[0]==="#"){var E=document.querySelector(f);if(!E)return;f={attrName:[f.replace("#","script_"),"_",e++,"_"].join(""),fragment:T?E[T]instanceof Document?E[T].body.textContent:E[T]:E.textContent,depth:E.dataset.depth!==void 0,diffuse:E.dataset.diffuse!==void 0,includes:E.dataset.includes?E.dataset.includes.trim().split(" "):null,defaults:E.dataset.defaults?E.dataset.defaults.trim().split(" "):null}}else{if(f=t.effects[f],!f)return;if(T){if(f=f.exports?f.exports[T]:null,!f)return;f.attrName=x[1]+"_"+T+"_"}}x[3]&&(P=x[3].trim().split(" "))}var S=(f.attrName?f.attrName:"undefined_"+e++)+"_";if(S=S.replace("__","_"),f.defaults&&f.defaults.forEach(function(w,L){var D=P[L];r.push(["#define $",L," ",D&&D!=="$"?D:w].join("").replace(/\$/g,S).replace("__","_"))}),f.diffuse&&(m=!0),f.depth&&(u=!0),f.fragment&&r.push(f.fragment.replace(/\$/g,S)),f.uniforms)for(var _ in f.uniforms)c[S+_]=f.uniforms[_];f.includes&&f.includes.forEach(function(w){l[w]=!0}),R&&o.push(["  ",S,"main(",b?"origColor, color":"color, origColor",", vUv, depth);"].join(""))});var p={i:"int",f:"float",t:"sampler2D",v2:"vec2",v3:"vec3",c:"vec3",v4:"vec4",m2:"mat2",m3:"mat3",m4:"mat4",b:"bool"};for(h in l)n.push("#include <"+h+">");var d=["void main () {"];c.tDiffuse=this.tDiffuse,m?d.push("  vec4 color = texture2D(tDiffuse, vUv);"):d.push("  vec4 color = vec4(0.0);"),d.push("  vec4 origColor = color;"),c.tDepth=this.tDepth,c.cameraFar=this.cameraFar,c.cameraNear=this.cameraNear,u?d.push("  float depth = texture2D(tDepth, vUv).x;"):d.push("  float depth = 0.0;");for(h in c){var y=c[h];n.push(["uniform",p[y.type],h,";"].join(" "))}n.push("varying vec2 vUv;");var g=[n.join(`
`),r.join(`
`),`
`,d.join(`
`),o.join(`
`),a?"  gl_FragColor = color;":"  gl_FragColor = vec4(color.rgb, 1.0);","}"].join(`
`),M=this.materialize({fragmentShader:g,uniforms:c});return this.sceneEl.components.debug&&console.log(g,M),M}},rebuild:function(){var i=this,a=[],t=[];this.passes.forEach(function(n){n.dispose&&n.dispose()}),this.data.forEach(function(n){if(!n){e();return}var o,l,u=i.parseToken.exec(n);if(!(!u||!u[1])){if(l=u[1],o=i.effects[l],!o){t.push(n);return}o.pass?(e(),a.push({pass:o.pass,behavior:o})):o.material?(e(),a.push({pass:r(o.material,!1,o.vr),behavior:o})):t.push(n)}});function e(){t.length&&(a.push({pass:r(i.fuse(t),!0)}),t=[])}function r(n,o,l){return{render:function(u,m,h){i.renderPass(n,m,l)},dispose:function(){o&&n.dispose()}}}e(),this.needsUpdate=!1,this.passes=a},isActive:function(i,a){var t=this.sceneEl;if(i.bypass)return!1;var e=!!t.renderTarget;return e?(a&&(this.needsResize||i.needsResize)&&i.setSize&&(t.renderer.getSize(s),i.setSize(s.x,s.y),delete i.needsResize),!0):!1},register:function(i){this.effects[i.attrName]=i,this.needsUpdate=!0},unregister:function(i){delete this.effects[i.attrName],this.needsUpdate=!0},tick:function(i,a){var t=this,e=this.sceneEl,r=e.renderer;e.effect;var n=this.renderTarget,o=this.targets,l=e.object3D;if(!(!n||!r)){if(this.needsOverride){if(l.onBeforeRender)l.onBeforeRender=function(h,c,p){var d=h.getSize(s);(s.x!==n.width||s.y!==n.height)&&(n.setSize(d.width,d.height),o[0].setSize(d.width,d.height),o[1].setSize(d.width,d.height),t.resolution.value.set(d.width,d.height,1/d.width,1/d.height),t.needsResize=!0,t.resizeTiles()),p instanceof THREE.ArrayCamera?t.cameras=p.cameras:t.cameras.push(p),t.tileLights(h,c,p)};else{var u=r.render;r.render=function(h,c,p,d){if(p===n){var y=r.getSize(s);(s.x!==n.width||s.y!==n.height)&&(n.setSize(y.width,y.height),o[0].setSize(y.width,y.height),o[1].setSize(y.width,y.height),t.resolution.value.set(y.width,y.height,1/y.width,1/y.height),t.needsResize=!0),t.cameras.push(c)}r.setRenderTarget(p),u.call(r,h,c),r.setRenderTarget(null)}}this.needsOverride=!1}this.cameras=[],this.time.value=i/1e3,this.timeDelta.value=a/1e3,this.needsUpdate===!0&&this.rebuild(),this.setupPasses(),this.tDiffuse.value=this.renderTarget.texture,this.tDepth.value=this.renderTarget.depthTexture;var m=this.sceneEl.camera;this.cameraFar.value=m.far,this.cameraNear.value=m.near}},setupPasses:function(){var i=[],a=this.renderTarget;this.passes.forEach(function(t){t.behavior&&t.behavior.bypass===!0||i.push(t)}),this.sceneEl.renderTarget=i.length&&this.sceneEl.isPlaying?a:null,this._passes=i},tock:function(){var i=this.sceneEl,a=i.renderer,t=this;if(i.renderTarget){var e=i.renderTarget,r=this.targets;this._passes.forEach(function(n,o){var l=o?r[o&1]:e;t.tDiffuse.value=l.texture,n.behavior&&n.behavior.resize&&t.isActive(n.behavior,!0),n.pass.render(a,o<t._passes.length-1?r[o+1&1]:null,l)}),this.needsResize=!1}},resizeTiles:function(){var i=this.LightState,a=i.width,t=i.height;i.cols=Math.ceil(a/32),i.rows=Math.ceil(i.height/32),i.tileData.value=[a,t,.5/Math.ceil(a/32),.5/Math.ceil(t/32)],i.tileTexture.value=new THREE.DataTexture(new Uint8Array(i.cols*i.rows*4),i.cols,i.rows)},tileLights:function(i,a,t){if(t.projectionMatrix){var e=this.LightState,r=this.lightComponents;i.getSize(s);var n=e.tileTexture.value.image.data,o=e.lightTexture.value.image.data,l=t.matrixWorldInverse;n.fill(0);var u=new THREE.Vector3,m;t instanceof THREE.ArrayCamera?m=[[.5,0,t.cameras[0]],[.5,.5,t.cameras[1]]]:m=[1,0,t],m.forEach(function(h){r.forEach(function(c,p){u.setFromMatrixPosition(c.el.object3D.matrixWorld);var d=e.width*h[0],y=e.width*h[1],g=self.lightBounds(h[2],u,c.data.radius,d);if(u.applyMatrix4(l),u.toArray(o,4*p),o[4*p+3]=c.data.radius,c.data.color.toArray(o,32*4+4*p),o[32*4+4*p+3]=c.data.decay,!(g[1]<0||g[0]>d||g[3]<0||g[2]>e.height)){g[0]<0&&(g[0]=0),g[1]>d&&(g[1]=d),g[2]<0&&(g[2]=0),g[3]>e.height&&(g[3]=e.height);for(var M=Math.floor(p/8),f=7-p%8,R=Math.floor(g[2]/32);R<=Math.ceil(g[3]/32);R++)for(var b=Math.floor((g[0]+y)/32);b<=Math.ceil((g[1]+y)/32);b++)n[(e.cols*R+b)*4+M]|=1<<f}})}),e.tileTexture.value.needsUpdate=!0,e.lightTexture.value.needsUpdate=!0}},lightBounds:function(){return v=new THREE.Vector3,function(i,a,t,e){for(var r=this.LightState,n=e,o=0,l=r.height,u=0,m=e/2,h=r.height/2,c=0;c<8;c++){v.copy(a),v.x+=c&1?t:-t,v.y+=c&2?t:-t,v.z+=c&4?t:-t;var p=v.project(i),d=p.x*m+m,y=p.y*h+h;n=Math.min(n,d),o=Math.max(o,d),l=Math.min(l,y),u=Math.max(u,y)}return[n,o,l,u]}}()}),U}var O;function de(){return O||(O=1,me()),N}var $={},B={},z;function pe(){return z||(z=1,AFRAME.registerComponent("outline",{multiple:!0,schema:{enabled:{default:!0},color:{type:"color",default:"#000000"},width:{type:"vec2",default:new THREE.Vector2(1,1)},range:{type:"vec2",default:new THREE.Vector2(0,1500)},strength:{type:"number",default:1},ratio:{type:"number",default:.5},smooth:{default:!1}},init:function(){this.system=this.el.sceneEl.systems.effects;var s={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat};this.renderTarget=new THREE.WebGLRenderTarget(1,1,s),this.blurTarget=new THREE.WebGLRenderTarget(1,1,s),this.needsResize=!0,this.resolution={type:"v4",value:new THREE.Vector4},this.tockUniforms={resolution:this.resolution,color:{type:"c",value:new THREE.Color},width:{type:"v2",value:null},range:{type:"v2",value:null},strength:{type:"f",value:1}},this.blurDirection={type:"v2",value:new THREE.Vector2},this.exports={sobel:{fragment:this.sobel,uniforms:this.tockUniforms,includes:["packing"],depth:!0},blur:{fragment:this.blur,uniforms:{resolution:this.tockUniforms.resolution,direction:this.blurDirection},diffuse:!0}},this.currentMaterial=this.system.fuse([this.exports.sobel],!0),this.blurMaterial=this.system.fuse([this.exports.blur],!0),this.uniforms={texture:{type:"t",value:this.renderTarget.texture}},this.system.register(this)},update:function(s){this.bypass=!this.data.enabled,this.tockUniforms.color.value.set(this.data.color),this.tockUniforms.width.value=this.data.width,this.tockUniforms.range.value=this.data.range,this.tockUniforms.strength.value=1/this.data.strength},setSize:function(s,i){s=Math.round(s*this.data.ratio),i=Math.round(i*this.data.ratio),this.renderTarget.setSize(s,i),this.blurTarget.setSize(s,i),this.resolution.value.set(s,i,1/s,1/i)},tock:function(){this.system.isActive(this,!0)&&(this.system.renderPass(this.currentMaterial,this.renderTarget),this.system.tDiffuse.value=this.renderTarget,this.data.smooth&&(this.blurDirection.value.set(1,0),this.system.renderPass(this.blurMaterial,this.blurTarget),this.system.tDiffuse.value=this.blurTarget,this.blurDirection.value.set(0,1),this.system.renderPass(this.blurMaterial,this.renderTarget)))},remove:function(){this.system.unregister(this)},diffuse:!0,sobel:["mat3 $G[2];","const mat3 $g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );","const mat3 $g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );","void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth) {","vec3 I[3];","float cnv[2];","float d;","$G[0] = $g0;","$G[1] = $g1;","for (float i=0.0; i<3.0; i++)","for (float j=0.0; j<3.0; j++) {","           d = texture2D(tDepth, uv + resolution.zw * vec2(i-1.0,j-1.0) ).x;","           d = perspectiveDepthToViewZ(d, cameraNear, cameraFar); ","			I[int(i)][int(j)] = viewZToOrthographicDepth(d, cameraNear, cameraFar);","}","for (int i=0; i<2; i++) {","float dp3 = dot($G[i][0], I[0]) + dot($G[i][1], I[1]) + dot($G[i][2], I[2]);","cnv[i] = dp3 * dp3; ","}","color = vec4($color, sqrt(cnv[0]*cnv[0]+cnv[1]*cnv[1]));","} "].join(`
`),blur:["void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth){","color.a *= 0.44198;","color.a += texture2D(tDiffuse, uv + ($direction * $resolution.zw )).a * 0.27901;","color.a += texture2D(tDiffuse, uv - ($direction * $resolution.zw )).a * 0.27901;","}"].join(`
`),fragment:["void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth){","	vec4 texel = texture2D($texture, uv);","   color.rgb = mix(color.rgb, texel.rgb, smoothstep(0.1,0.3,texel.a));","}"].join(`
`)})),B}var q={},W;function ge(){return W||(W=1,AFRAME.registerComponent("film",{multiple:!0,schema:{speed:{default:1},nIntensity:{default:.5},sIntensity:{default:.05},sCount:{default:4096}},init:function(){this.uniforms={speed:{type:"f",value:0},nIntensity:{type:"f",value:.5},sIntensity:{type:"f",value:.05},sCount:{type:"f",value:4096}},this.system=this.el.sceneEl.systems.effects,this.system.register(this)},update:function(){var s=this.data,i=this.uniforms;for(var a in i)s[a]&&(i[a].value=s[a])},remove:function(){this.system.unregister(this)},includes:["common"],diffuse:!0,fragment:["void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth) {","   vec4 cTextureScreen = color;","   float dx = rand( uv + mod(time, 3.14) * $speed );","   vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx, 0.0, 1.0 );","   vec2 sc = vec2( sin( uv.y * $sCount ), cos( uv.y * $sCount ) );","   cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * $sIntensity;","   cResult = cTextureScreen.rgb + clamp( $nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );","   color.rgb =  cResult; //cResult;","}"].join(`
`)})),q}var G={},C,k;function ye(){return k||(k=1,C={uniforms:{tDiffuse:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2}},vertexShader:`#define GLSLIFY 1
varying vec2 vUv;

varying vec2 v_rgbNW;
varying vec2 v_rgbNE;
varying vec2 v_rgbSW;
varying vec2 v_rgbSE;
varying vec2 v_rgbM;

uniform vec2 resolution;

void main() {
  vUv = uv;
  vec2 fragCoord = uv * resolution;
  vec2 inverseVP = 1.0 / resolution.xy;
  v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;
  v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;
  v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;
  v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;
  v_rgbM = vec2(fragCoord * inverseVP);

  gl_Position = projectionMatrix *
              modelViewMatrix *
              vec4(position,1.0);
}
`,fragmentShader:`#define GLSLIFY 1
varying vec2 vUv;

//texcoords computed in vertex step
//to avoid dependent texture reads
varying vec2 v_rgbNW;
varying vec2 v_rgbNE;
varying vec2 v_rgbSW;
varying vec2 v_rgbSE;
varying vec2 v_rgbM;

//make sure to have a resolution uniform set to the screen size
uniform vec2 resolution;
uniform sampler2D tDiffuse;

/**
Basic FXAA implementation based on the code on geeks3d.com with the
modification that the texture2DLod stuff was removed since it's
unsupported by WebGL.

--

From:
https://github.com/mitsuhiko/webgl-meincraft

Copyright (c) 2011 by Armin Ronacher.

Some rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above
      copyright notice, this list of conditions and the following
      disclaimer in the documentation and/or other materials provided
      with the distribution.

    * The names of the contributors may not be used to endorse or
      promote products derived from this software without specific
      prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#ifndef FXAA_REDUCE_MIN
    #define FXAA_REDUCE_MIN   (1.0/ 128.0)
#endif
#ifndef FXAA_REDUCE_MUL
    #define FXAA_REDUCE_MUL   (1.0 / 8.0)
#endif
#ifndef FXAA_SPAN_MAX
    #define FXAA_SPAN_MAX     8.0
#endif

//optimized version for mobile, where dependent 
//texture reads can be a bottleneck
vec4 fxaa_1540259130(sampler2D tex, vec2 fragCoord, vec2 resolution,
            vec2 v_rgbNW, vec2 v_rgbNE, 
            vec2 v_rgbSW, vec2 v_rgbSE, 
            vec2 v_rgbM) {
    vec4 color;
    mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);
    vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;
    vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;
    vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;
    vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;
    vec4 texColor = texture2D(tex, v_rgbM);
    vec3 rgbM  = texColor.xyz;
    vec3 luma = vec3(0.299, 0.587, 0.114);
    float lumaNW = dot(rgbNW, luma);
    float lumaNE = dot(rgbNE, luma);
    float lumaSW = dot(rgbSW, luma);
    float lumaSE = dot(rgbSE, luma);
    float lumaM  = dot(rgbM,  luma);
    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));
    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));
    
    mediump vec2 dir;
    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));
    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));
    
    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *
                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);
    
    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);
    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),
              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),
              dir * rcpDirMin)) * inverseVP;
    
    vec3 rgbA = 0.5 * (
        texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +
        texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);
    vec3 rgbB = rgbA * 0.5 + 0.25 * (
        texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +
        texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);

    float lumaB = dot(rgbB, luma);
    if ((lumaB < lumaMin) || (lumaB > lumaMax))
        color = vec4(rgbA, texColor.a);
    else
        color = vec4(rgbB, texColor.a);
    return color;
}

void main() {
  vec2 fragCoord = vUv * resolution;   
  gl_FragColor = fxaa_1540259130(tDiffuse, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);
}
`}),C}var j;function Ee(){if(j)return G;j=1;var s=ye();return AFRAME.registerComponent("fxaa",{schema:{default:!0},init:function(){this.system=this.el.sceneEl.systems.effects,this.material=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:{tDiffuse:this.system.tDiffuse,resolution:{type:"v2",value:new THREE.Vector2}}}),this.system.register(this),this.needsResize=!0},update:function(){this.bypass=!this.data},setSize:function(i,a){this.material.uniforms.resolution.value.set(i,a)},resize:!0,remove:function(){this.material.dispose(),this.system.unregister(this)}}),G}var X={},A,Z;function xe(){return Z||(Z=1,A={shaderID:"luminosityHighPass",uniforms:{tDiffuse:{type:"t",value:null},luminosityThreshold:{type:"f",value:1},smoothWidth:{type:"f",value:1},defaultColor:{type:"c",value:new THREE.Color(0)},defaultOpacity:{type:"f",value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join(`
`),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec3 defaultColor;","uniform float defaultOpacity;","uniform float luminosityThreshold;","uniform float smoothWidth;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","vec3 luma = vec3( 0.299, 0.587, 0.114 );","float v = dot( texel.xyz, luma );","vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );","float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );","gl_FragColor = mix( outputColor, texel, alpha );","}"].join(`
`)}),A}var Y;function Te(){if(Y)return X;Y=1,xe();var s=new THREE.Vector2(1,0),i=new THREE.Vector2(0,1);return AFRAME.registerComponent("bloom",{multiple:!0,schema:{enable:{default:!0},strength:{default:1},radius:{default:.4},threshold:{default:.8},filter:{type:"array",default:[]}},init:function(){this.system=this.el.sceneEl.systems.effects;var a={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat};this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5,this.renderTargetBright=new THREE.WebGLRenderTarget(1,1,a),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(var t=0;t<this.nMips;t++){var e=new THREE.WebGLRenderTarget(1,1,a);e.texture.name="UnrealBloomPass.h"+t,e.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(e);var e=new THREE.WebGLRenderTarget(1,1,a);e.texture.name="UnrealBloomPass.v"+t,e.texture.generateMipmaps=!1,this.renderTargetsVertical.push(e)}this.exports={filter:{uniforms:{luminosityThreshold:{type:"f",value:1},smoothWidth:{type:"f",value:.01},defaultColor:{type:"c",value:new THREE.Color(0)},defaultOpacity:{type:"f",value:1}},diffuse:!0,fragment:["void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth) {","vec4 texel = color;","float v = dot( texel.xyz, vec3( 0.299, 0.587, 0.114 ) );","vec4 outputColor = vec4( $defaultColor.rgb, $defaultOpacity );","float alpha = smoothstep( $luminosityThreshold, $luminosityThreshold + $smoothWidth, v );","color = mix( outputColor, texel, alpha );","}"].join(`
`)}},this.materialHighPassFilter=null,this.separableBlurMaterials=[];for(var r=[3,5,7,9,11],t=0;t<this.nMips;t++)this.separableBlurMaterials.push(this.getSeperableBlurMaterial(r[t])),this.separableBlurMaterials[t].uniforms.texSize.value=new THREE.Vector2(1,1);this.compositeMaterial=this.getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.needsUpdate=!0;var n=[1,.8,.6,.4,.2];this.compositeMaterial.uniforms.bloomFactors.value=n,this.bloomTintColors=[new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,this.oldClearColor=new THREE.Color,this.uniforms={texture:{type:"t",value:this.renderTargetsHorizontal[0]}},this.needsResize=!0,this.system.register(this)},update:function(a){if(a.filter!==this.data.filter){this.materialHighPassFilter&&this.materialHighPassFilter.dispose();var t=this.data.filter.length?this.data.filter:[this.exports.filter];this.materialHighPassFilter=this.system.fuse(t,!1)}},tock:function(a){if(!(!this.data.enable||!this.system.isActive(this,!0))){var t=this.el.sceneEl,e=t.renderer,r=t.renderTarget;this.oldClearColor.copy(e.getClearColor()),this.oldClearAlpha=e.getClearAlpha();var n=e.autoClear;e.autoClear=!1,e.setClearColor(new THREE.Color(0,0,0),0),this.system.tDiffuse.value=r.texture,this.exports.filter.uniforms.luminosityThreshold.value=this.data.threshold,this.system.renderPass(this.materialHighPassFilter,this.renderTargetBright,null,!1);for(var o=this.renderTargetBright,l=0;l<this.nMips;l++)this.separableBlurMaterials[l].uniforms.colorTexture.value=o.texture,this.separableBlurMaterials[l].uniforms.direction.value=s,this.system.renderPass(this.separableBlurMaterials[l],this.renderTargetsHorizontal[l],!0),this.separableBlurMaterials[l].uniforms.colorTexture.value=this.renderTargetsHorizontal[l].texture,this.separableBlurMaterials[l].uniforms.direction.value=i,this.system.renderPass(this.separableBlurMaterials[l],this.renderTargetsVertical[l],!0),o=this.renderTargetsVertical[l];this.compositeMaterial.uniforms.bloomStrength.value=this.data.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.data.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,this.system.renderPass(this.compositeMaterial,this.renderTargetsHorizontal[0],null),e.setClearColor(this.oldClearColor,this.oldClearAlpha),e.autoClear=n}},setSize:function(a,t){var e=Math.round(a/2),r=Math.round(t/2);this.renderTargetBright.setSize(e,r);for(var n=0;n<this.nMips;n++)this.renderTargetsHorizontal[n].setSize(e,r),this.renderTargetsVertical[n].setSize(e,r),this.separableBlurMaterials[n].uniforms.texSize.value=new THREE.Vector2(e,r),e=Math.round(e/2),r=Math.round(r/2)},remove:function(){this.system.unregister(this);for(var a=0;a<this.renderTargetsHorizontal.length;a++)this.renderTargetsHorizontal[a].dispose();for(var a=0;a<this.renderTargetsVertical.length;a++)this.renderTargetsVertical[a].dispose();this.renderTargetBright.dispose()},getSeperableBlurMaterial:function(a){return this.system.materialize({defines:{KERNEL_RADIUS:a,SIGMA:a},uniforms:{colorTexture:{value:null},texSize:{value:new THREE.Vector2(.5,.5)},direction:{value:new THREE.Vector2(.5,.5)}},vertexShader:`varying vec2 vUv;
					void main() {
						vUv = uv;
						gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
					}`,fragmentShader:`#include <common>					varying vec2 vUv;
					uniform sampler2D colorTexture;
					uniform vec2 texSize;					uniform vec2 direction;					float gaussianPdf(in float x, in float sigma) {						return 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;					}					void main() {
						vec2 invSize = 1.0 / texSize;						float fSigma = float(SIGMA);						float weightSum = gaussianPdf(0.0, fSigma);						vec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;						for( int i = 1; i < KERNEL_RADIUS; i ++ ) {							float x = float(i);							float w = gaussianPdf(x, fSigma);							vec2 uvOffset = direction * invSize * x;							vec3 sample1 = textureVR( colorTexture, vUv + uvOffset).rgb;							vec3 sample2 = textureVR( colorTexture, vUv - uvOffset).rgb;							diffuseSum += (sample1 + sample2) * w;							weightSum += 2.0 * w;						}						gl_FragColor = vec4(diffuseSum/weightSum, 1.0);
					}`})},getCompositeMaterial:function(a){return new THREE.ShaderMaterial({defines:{NUM_MIPS:a},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:`varying vec2 vUv;
					void main() {
						vUv = uv;
						gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
					}`,fragmentShader:"varying vec2 vUv;					uniform sampler2D blurTexture1;					uniform sampler2D blurTexture2;					uniform sampler2D blurTexture3;					uniform sampler2D blurTexture4;					uniform sampler2D blurTexture5;					uniform float bloomStrength;					uniform float bloomRadius;					uniform float bloomFactors[NUM_MIPS];					uniform vec3 bloomTintColors[NUM_MIPS];										float lerpBloomFactor(const in float factor) { 						float mirrorFactor = 1.2 - factor;						return mix(factor, mirrorFactor, bloomRadius);					}										void main() {						gl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + 						 							 lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + 													 lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + 													 lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + 													 lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );					}"})},diffuse:!0,defaults:["1.0"],fragment:["void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth){","   color.rgb += texture2D($texture, uv).rgb;","}"].join(`
`)}),X}var K={},Q;function Re(){return Q||(Q=1,AFRAME.registerComponent("colors",{multiple:!0,schema:{mode:{default:"map"},lut:{type:"selector"},lutClamp:{default:!1},lutFlip:{default:!1},add:{type:"vec3",default:new THREE.Vector3(0,0,0)},mul:{type:"vec3",default:new THREE.Vector3(1,1,1)},pow:{type:"vec3",default:new THREE.Vector3(1,1,1)},left:{type:"vec3",default:new THREE.Vector3(0,0,0)},right:{type:"vec3",default:new THREE.Vector3(1,1,1)},min:{type:"vec3",default:new THREE.Vector3(0,0,0)},max:{type:"vec3",default:new THREE.Vector3(1,1,1)},quant:{type:"vec3",default:new THREE.Vector3(.2,.2,.2)},orig:{type:"vec3",default:new THREE.Vector3(1,1,1)},red:{type:"vec3",default:new THREE.Vector3(1,0,0)},green:{type:"vec3",default:new THREE.Vector3(0,.5,.5)},blue:{type:"vec3",default:new THREE.Vector3(0,.5,.5)}},init:function(){this.system=this.el.sceneEl.systems.effects,this.uniforms={add:{type:"v3",value:null},mul:{type:"v3",value:null},pow:{type:"v3",value:null},left:{type:"v3",value:null},right:{type:"v3",value:null},min:{type:"v3",value:null},max:{type:"v3",value:null},quant:{type:"v3",value:null},orig:{type:"v3",value:null},red:{type:"v3",value:null},green:{type:"v3",value:null},blue:{type:"v3",value:null},texture:{type:"t",value:new THREE.Texture(void 0,void 0,void 0,void 0,THREE.NearestFilter,THREE.NearestFilter)}},this.rebuild(),this.system.register(this)},update:function(s){var i=this.data,a=this.uniforms;for(var t in a)i[t]!==void 0&&(a[t].value=i[t]);if((this.data.lutFlip!==s.lutFlip||this.data.lutClamp!==s.lutClamp||this.data.mode!=s.mode)&&this.rebuild(),this.data.lut!==s.lut){const e=this.uniforms.texture.value;e.image=this.data.lut,e.needsUpdate=!0}},remove:function(){this.system.unregister(this)},rebuild:function(){for(var s=[],i=this.data.mode,a=0;a<i.length;a++){var t=this.ops[i[a]];t&&s.push(t)}this.fragment=[this.data.lutClamp?"":"#define $LUT_NO_CLAMP 1",this.data.lutFlip?"#define $LUT_FLIP_Y 1":"",this.preFragment,s.join(`
`),"}"].join(`
`),this.system.needsUpdate=!0},ops:{m:"color.rgb *= $mul;",a:"color.rgb += $add;",p:"color.rgb = pow(color.rgb, $pow);",h:"color.rgb = $rgb2hsv(color.rgb);",r:"color.rgb = $hsv2rgb(color.rgb);",s:"color.rgb = smoothstep($left, $right, color.rgb);",l:"color.rgb = $lut(color).rgb;",q:"color.rgb = floor(color.rgb / $quant) * $quant;",c:"color.rgb = clamp(color.rgb, $min, $max);",g:"color.rgb = vec3(dot(color.rgb, vec3(0.299, 0.587, 0.114)));",o:"color.rgb = mix(color.rgb, orig.rgb, $orig);",t:"color.rgb = vec3(dot(color.rgb, $red), dot(color.rgb, $green), dot(color.rgb, $blue));",b:"color.rgb = color.rgb;"},diffuse:!0,preFragment:["vec4 $lut(vec4 textureColor) {","    #ifndef $LUT_NO_CLAMP","        textureColor = clamp(textureColor, 0.0, 1.0);","    #endif","    mediump float blueColor = textureColor.b * 63.0;","    mediump vec2 quad1;","    quad1.y = floor(floor(blueColor) / 8.0);","    quad1.x = floor(blueColor) - (quad1.y * 8.0);","    mediump vec2 quad2;","    quad2.y = floor(ceil(blueColor) / 8.0);","    quad2.x = ceil(blueColor) - (quad2.y * 8.0);","    highp vec2 texPos1;","    texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);","    texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);","    #ifdef $LUT_FLIP_Y","        texPos1.y = 1.0-texPos1.y;","    #endif","    highp vec2 texPos2;","    texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);","    texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);","    #ifdef $LUT_FLIP_Y","        texPos2.y = 1.0-texPos2.y;","    #endif","    lowp vec4 newColor1 = texture2D($texture, texPos1);","    lowp vec4 newColor2 = texture2D($texture, texPos2);","    lowp vec4 newColor = mix(newColor1, newColor2, fract(blueColor));","    return newColor;","}","vec3 $rgb2hsv(vec3 c){","    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);","    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));","    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));","    float d = q.x - min(q.w, q.y);","    float e = 1.0e-10;","    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);","}","vec3 $hsv2rgb(vec3 c)","{","    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);","    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);","    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);","}","void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth){","vec3 orig = color.rgb;"].join(`
`)})),K}var J={},ee;function be(){return ee||(ee=1,AFRAME.registerComponent("glitch",{schema:{default:!0},init:function(){this.system=this.el.sceneEl.systems.effects,this.uniforms={tDisp:{type:"t",value:this.generateHeightmap(64)},amount:{type:"f",value:.08},angle:{type:"f",value:.02},seed:{type:"f",value:.02},seed_x:{type:"f",value:.02},seed_y:{type:"f",value:.02},distortion_x:{type:"f",value:.5},distortion_y:{type:"f",value:.6},col_s:{type:"f",value:.05}},this.exports={glitch:{fragment:this.fragment,uniforms:this.uniforms}},this.material=this.system.fuse([this.exports.glitch]),this.system.register(this)},vr:!0,update:function(){this.bypass=!this.data,this.curF=0,this.generateTrigger()},remove:function(){this.system.unregister(this)},tock:function(){this.uniforms.seed.value=Math.random(),this.curF%this.randX==0?(this.uniforms.amount.value=Math.random()/30,this.uniforms.angle.value=THREE.Math.randFloat(-Math.PI,Math.PI),this.uniforms.seed_x.value=THREE.Math.randFloat(-1,1),this.uniforms.seed_y.value=THREE.Math.randFloat(-1,1),this.uniforms.distortion_x.value=THREE.Math.randFloat(0,1),this.uniforms.distortion_y.value=THREE.Math.randFloat(0,1),this.curF=0,this.generateTrigger()):this.curF%this.randX<this.randX/5&&(this.uniforms.amount.value=Math.random()/90,this.uniforms.angle.value=THREE.Math.randFloat(-Math.PI,Math.PI),this.uniforms.distortion_x.value=THREE.Math.randFloat(0,1),this.uniforms.distortion_y.value=THREE.Math.randFloat(0,1),this.uniforms.seed_x.value=THREE.Math.randFloat(-.3,.3),this.uniforms.seed_y.value=THREE.Math.randFloat(-.3,.3)),this.curF++},generateTrigger:function(){this.randX=THREE.Math.randInt(120,240)},generateHeightmap:function(s){for(var i=new Float32Array(s*s*3),a=s*s,t=0;t<a;t++){var e=THREE.Math.randFloat(0,1);i[t*3+0]=e,i[t*3+1]=e,i[t*3+2]=e}var r=new THREE.DataTexture(i,s,s,THREE.RGBFormat,THREE.FloatType);return r.needsUpdate=!0,r},fragment:["float $rand(vec2 co){","return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);","}","void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth) {","vec2 p = uv;","vec2 p2 = vec2( smoothstep(uvClamp.x, uvClamp.y, p.x),p.y);","float xs = floor(gl_FragCoord.x / 0.5);","float ys = floor(gl_FragCoord.y / 0.5);","vec4 normal = texture2D ($tDisp, p2 * $seed * $seed);","if(p2.y < $distortion_x + $col_s && p2.y > $distortion_x - $col_s * $seed) {","if($seed_x>0.){","p.y = 1. - (p.y + $distortion_y);","}","else {","p.y = $distortion_y;","}","}","if(p2.x < $distortion_y + $col_s && p2.x > $distortion_y - $col_s * $seed) {","if( $seed_y > 0.){","p.x = $distortion_x;","}","else {","p.x = 1. - (p.x + $distortion_x);","}","}","p.x+=normal.x* $seed_x * ($seed/5.);","p.y+=normal.y* $seed_y * ($seed/5.);","vec2 offset = $amount * vec2( cos($angle), sin($angle));","vec4 cr = textureVR(tDiffuse, p + offset);","vec4 cga = textureVR(tDiffuse, p);","vec4 cb = textureVR(tDiffuse, p - offset);","color = vec4(cr.r, cga.g, cb.b, cga.a);","vec4 snow = 200.*$amount*vec4($rand(vec2(xs * $seed,ys * $seed*50.))*0.2);","color = color+ snow;","}"].join(`
`)})),J}var te={},re;function Se(){return re||(re=1,AFRAME.registerComponent("godrays",{schema:{tint:{type:"color",default:"#FFFFFF"},threshold:{type:"vec4",default:new THREE.Vector4(0,1,1)},src:{type:"selector",default:null},intensity:{default:1},filter:{type:"array",default:[]},ratio:{default:.25}},init:function(){this.system=this.el.sceneEl.systems.effects;var s={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat};this.rtFilter=new THREE.WebGLRenderTarget(1,1,s),this.rtTextureGodRays1=new THREE.WebGLRenderTarget(1,1,s),this.rtTextureGodRays2=new THREE.WebGLRenderTarget(1,1,s),this.exports={filter:{includes:["packing"],uniforms:{tint:{type:"c",value:new THREE.Color},threshold:{type:"v2",value:new THREE.Vector2(0,1)}},depth:!0,fragment:["void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth) {","   float v = viewZToOrthographicDepth(perspectiveDepthToViewZ(depth, cameraNear, cameraFar), cameraNear, cameraFar);","   color.rgb = vec3(smoothstep($threshold.x, $threshold.y, v)) * $tint;","}"].join(`
`)},blur:{uniforms:{step:{type:"f",value:1},src:{type:"v3",value:new THREE.Vector3(.5,.5,0)}},fragment:["void $main(inout vec4 color, vec4 orig, vec2 uv, float depth) {","vec2 center = vec2(mix(uvClamp.x, uvClamp.y, $src.x), $src.y);","vec2 delta = center - uv;","float dist = length( delta );","vec2 stepv = $step * delta / dist;","float iters = dist/$step;","vec4 col = vec4(0.0);","if ( 0.0 <= iters && uv.y < 1.0 ) col += textureVR( tDiffuse, uv );","uv += stepv;","if ( 1.0 <= iters && uv.y < 1.0 ) col += textureVR( tDiffuse, uv );","uv += stepv;","if ( 2.0 <= iters && uv.y < 1.0 ) col += textureVR( tDiffuse, uv );","uv += stepv;","if ( 3.0 <= iters && uv.y < 1.0 ) col += textureVR( tDiffuse, uv );","uv += stepv;","if ( 4.0 <= iters && uv.y < 1.0 ) col += textureVR( tDiffuse, uv );","uv += stepv;","if ( 5.0 <= iters && uv.y < 1.0 ) col += textureVR( tDiffuse, uv );","color = col/6.0;","}"].join(`
`)}},this.materialGodraysGenerate=this.system.fuse([this.exports.blur]),this.uniforms={intensity:{type:"f",value:1},attenuation:{type:"f",value:1},texture:{type:"t",value:this.rtTextureGodRays2}},this.materialFilter=null,this.needsResize=!0,this.system.register(this)},setSize:function(s,i){s=Math.round(s*this.data.ratio),i=Math.round(i*this.data.ratio),this.rtTextureGodRays1.setSize(s,i),this.rtTextureGodRays2.setSize(s,i),this.rtFilter.setSize(s,i)},update:function(s){this.exports.filter.uniforms.tint.value.set(this.data.tint),this.uniforms.intensity.value=this.data.intensity,this.data.filter!==s.filter&&(this.materialFilter&&this.materialFilter.dispose(),this.materialFilter=this.system.fuse(this.data.filter.length?this.data.filter:[this.exports.filter])),this.bypass=this.data.src===null},tock:function(){if(this.system.isActive(this,!0)){var s=this;this.system.tDiffuse.value=this.system.renderTarget.texture,this.system.renderPass(this.materialFilter,this.rtFilter,i);var i=function(n,o,l){var u=new THREE.Vector3,m=new THREE.Vector3,h=s.exports.blur.uniforms.src.value;s.data.src.object3D.getWorldPosition(h),o.getWorldPosition(u),o.getWorldDirection(m),u.sub(h),u.normalize(),m.normalize(),s.uniforms.attenuation.value=Math.pow(Math.max(0,-m.dot(u)),1.33),h.project(o),h.set((h.x+1)/2,(h.y+1)/2,0)},a=1,t=6,e=1,r=a*Math.pow(t,-e);this.exports.blur.uniforms.step.value=r,this.system.tDiffuse.value=this.rtFilter.texture,this.system.renderPass(this.materialGodraysGenerate,this.rtTextureGodRays2,i),e=2,r=a*Math.pow(t,-e),this.exports.blur.uniforms.step.value=r,this.system.tDiffuse.value=this.rtTextureGodRays2.texture,this.system.renderPass(this.materialGodraysGenerate,this.rtTextureGodRays1,i),e=3,r=a*Math.pow(t,-e),this.exports.blur.uniforms.step.value=r,this.system.tDiffuse.value=this.rtTextureGodRays1.texture,this.system.renderPass(this.materialGodraysGenerate,this.rtTextureGodRays2,i)}},remove:function(){this.rtTextureGodRays1.dispose(),this.rtTextureGodRays2.dispose(),this.rtFilter.dispose(),this.materialGodraysGenerate.dispose(),this.materialFilter.dispose(),this.system.unregister(this)},diffuse:!0,fragment:["float $blendScreen(float base, float blend) {","    return 1.0-((1.0-base)*(1.0-blend));","}","vec3 $blendScreen(vec3 base, vec3 blend) {","    return vec3($blendScreen(base.r,blend.r),$blendScreen(base.g,blend.g),$blendScreen(base.b,blend.b));","}","vec3 $blendScreen(vec3 base, vec3 blend, float opacity) {","    return ($blendScreen(base, blend) * opacity + base * (1.0 - opacity));","}","void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth) {","   vec4 texel = texture2D($texture, uv);","   color.rgb = $blendScreen( color.rgb, texel.rgb, $intensity * $attenuation);","}"].join(`
`)})),te}var ie={},F,ae;function Me(){return ae||(ae=1,F=function(s){return{defines:{},uniforms:{tDepth:{type:"t",value:null},cameraNear:{type:"f",value:1},cameraFar:{type:"f",value:100},cameraProjectionMatrix:{type:"m4",value:new THREE.Matrix4},cameraInverseProjectionMatrix:{type:"m4",value:new THREE.Matrix4},scale:{type:"f",value:1},bias:{type:"f",value:.5},minResolution:{type:"f",value:0},kernelRadius:{type:"f",value:.5},randomSeed:{type:"f",value:0},maxDepth:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join(`
`),fragmentShader:["#include <common>","#include <packing>","varying vec2 vUv;","uniform sampler2D tDepth;","uniform float cameraNear;","uniform float cameraFar;","uniform mat4 cameraProjectionMatrix;","uniform mat4 cameraInverseProjectionMatrix;","uniform float scale;","uniform float intensity;","uniform float bias;","uniform float kernelRadius;","uniform float minResolution;","uniform float randomSeed;","uniform float maxDepth;","float unpackDepth(vec3 pack) {","	float depth = dot( pack, 1.0 / vec3(1.0, 256.0, 256.0*256.0) );","	return depth * (256.0*256.0*256.0) / (256.0*256.0*256.0 - 1.0);","}","vec3 packDepth(float depth) {","	float depthVal = depth * (256.0*256.0*256.0 - 1.0) / (256.0*256.0*256.0);","	vec4 encode = fract( depthVal * vec4(1.0, 256.0, 256.0*256.0, 256.0*256.0*256.0) );","	return encode.xyz - encode.yzw / 256.0 + 1.0/512.0;","}","float getViewZ( const in float depth ) {","return perspectiveDepthToViewZ( depth, cameraNear, cameraFar );","}","vec3 getViewPosition( const in vec2 screenPosition, const in float depth, const in float viewZ ) {","float clipW = cameraProjectionMatrix[2][3] * viewZ + cameraProjectionMatrix[3][3];","vec4 clipPosition = vec4( ( vec3( screenPosition, depth ) - 0.5 ) * 2.0, 1.0 );","clipPosition *= clipW;","return ( cameraInverseProjectionMatrix * clipPosition ).xyz;","}","vec3 getViewNormal( const in vec3 viewPosition, const in vec2 screenPosition ) {","return normalize( cross( dFdx( viewPosition ), dFdy( viewPosition ) ) );","}","float scaleDividedByCameraFar;","float minResolutionMultipliedByCameraFar;","float getOcclusion( const in vec3 centerViewPosition, const in vec3 centerViewNormal, const in vec3 sampleViewPosition ) {","vec3 viewDelta = sampleViewPosition - centerViewPosition;","float viewDistance = length( viewDelta );","float scaledScreenDistance = scaleDividedByCameraFar * viewDistance;","return max(0.0, (dot(centerViewNormal, viewDelta) - minResolutionMultipliedByCameraFar) / scaledScreenDistance - bias) / (1.0 + pow2( scaledScreenDistance ) );","}","const float ANGLE_STEP = PI2 * RINGS / SAMPLES;","const float INV_NUM_SAMPLES = 1.0 / SAMPLES;","float getAmbientOcclusion( const in vec3 centerViewPosition) {","scaleDividedByCameraFar = scale;","minResolutionMultipliedByCameraFar = minResolution * cameraFar;","vec3 centerViewNormal = getViewNormal( centerViewPosition, vUv );","float angle = rand( vUv + randomSeed ) * PI2;","vec2 radius = vec2( kernelRadius * INV_NUM_SAMPLES );","vec2 radiusStep = radius;","float occlusionSum = 0.;","float weightSum = 0.;","for( int i = 0; i < int(SAMPLES); i ++ ) {","vec2 sampleUv = vUv + vec2( cos( angle ), sin( angle ) ) * radius;","radius += radiusStep;","angle += ANGLE_STEP;","float sampleDepth = textureVR( tDepth, sampleUv ).x;","if( sampleDepth >= ( 1.0 - EPSILON ) ) {","continue;","}","float sampleViewZ = getViewZ( sampleDepth );","vec3 sampleViewPosition = getViewPosition( sampleUv, sampleDepth, sampleViewZ );","occlusionSum += getOcclusion( centerViewPosition, centerViewNormal, sampleViewPosition );","weightSum += 1.0;","}","if( weightSum == 0.0 ) discard;","return occlusionSum / weightSum;","}","void main() {","vec4 texel = texture2D( tDepth, vUv );","float centerDepth = texel.x;","if( centerDepth >= ( maxDepth - EPSILON ) ) {","discard;","}","float centerViewZ = getViewZ( centerDepth );","vec3 viewPosition = getViewPosition( vUv, centerDepth, centerViewZ );","gl_FragColor =  vec4(packDepth(texel.x), getAmbientOcclusion( viewPosition));","}"].join(`
`)}}),F}var H,se;function we(){return se||(se=1,THREE.BlurShaderUtils={createSampleWeights:function(s,i){for(var a=function(r,n){return Math.exp(-(r*r)/(2*(n*n)))/(Math.sqrt(2*Math.PI)*n)},t=[],e=0;e<=s;e++)t.push(a(e,i));return t},createSampleOffsets:function(s,i){for(var a=[],t=0;t<=s;t++)a.push(i.clone().multiplyScalar(t));return a},configure:function(s,i,a){return{sampleUvOffsets:THREE.BlurShaderUtils.createSampleOffsets(s,a),sampleWeights:THREE.BlurShaderUtils.createSampleWeights(s,i)}}},H=function(s,i,a){s=s||4;var t=THREE.BlurShaderUtils.configure(s,i,a);return{defines:{KERNEL_RADIUS:s},uniforms:{tDiffuse:{type:"t",value:null},size:{type:"v2",value:new THREE.Vector2(512,512)},sampleUvOffsets:{type:"v2v",value:t.sampleUvOffsets},sampleWeights:{type:"1fv",value:t.sampleWeights},depthCutoff:{type:"f",value:10},cameraFar:{type:"f",value:1},cameraNear:{type:"f",value:1e3}},vertexShader:["#include <common>","uniform vec2 size;","varying vec2 vUv;","varying vec2 vInvSize;","void main() {","vUv = uv;","vInvSize = 1.0 / size;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join(`
`),fragmentShader:["#include <common>","#include <packing>","uniform sampler2D tDiffuse;","uniform vec2 sampleUvOffsets[ KERNEL_RADIUS + 1 ];","uniform float sampleWeights[ KERNEL_RADIUS + 1 ];","uniform float depthCutoff;","uniform float cameraFar;","uniform float cameraNear;","varying vec2 vUv;","varying vec2 vInvSize;","float unpackDepth(vec3 pack) {","	float depth = dot( pack, 1.0 / vec3(1.0, 256.0, 256.0*256.0) );","	return depth * (256.0*256.0*256.0) / (256.0*256.0*256.0 - 1.0);","}","float getViewZ( const in float depth ) {","return perspectiveDepthToViewZ( depth, cameraNear, cameraFar );","}","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","vec3 orig = texel.xyz;","float depth = unpackDepth( orig );","if( depth >= ( 1.0 - EPSILON ) ) {","discard;","}","float centerViewZ = -getViewZ( depth );","bool rBreak = false, lBreak = false;","float weightSum = sampleWeights[0];","float AOSum = texel.a * weightSum;","for( int i = 1; i <= KERNEL_RADIUS; i ++ ) {","float sampleWeight = sampleWeights[i];","vec2 sampleUvOffset = sampleUvOffsets[i] * vInvSize;","vec2 sampleUv = vUv + sampleUvOffset;","texel = textureVR( tDiffuse, sampleUv );","float viewZ = -getViewZ(unpackDepth( texel.xyz ));","if( abs( viewZ - centerViewZ ) > depthCutoff ) rBreak = true;","if( ! rBreak ) {","AOSum += texel.a * sampleWeight;","weightSum += sampleWeight;","}","sampleUv = vUv - sampleUvOffset;","texel = textureVR( tDiffuse, sampleUv );","viewZ = -getViewZ(unpackDepth( texel.xyz ));","if( abs( viewZ - centerViewZ ) > depthCutoff ) lBreak = true;","if( ! lBreak ) {","AOSum += texel.a * sampleWeight;","weightSum += sampleWeight;","}","}","gl_FragColor = vec4(orig, AOSum / weightSum);","}"].join(`
`)}}),H}var ne;function De(){if(ne)return ie;ne=1;var s=Me(),i=we();return AFRAME.registerComponent("ssao",{schema:{samples:{type:"number",default:16},rings:{type:"number",default:7},radius:{type:"number",default:.5},ratio:{default:.5},intensity:{default:1},maxDepth:{default:.99},bias:{default:.05},scale:{default:.15},blurRadius:{default:7},depthCutoff:{default:10}},init:function(){this.system=this.el.sceneEl.systems.effects;var a={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat};this.renderTargets=[],this.renderTargets.push(new THREE.WebGLRenderTarget(1,1,a)),this.renderTargets.push(new THREE.WebGLRenderTarget(1,1,a)),this.uniforms={texture:{type:"t",value:this.renderTargets[0].texture},intensity:{type:"f",value:1},maxDepth:{type:"f",value:.99},depthCutoff:{type:"f",default:1}},this.SAOMaterial=null,this.hBlurMaterial=null,this.vBlurMaterial=null,this.sizeUniform={type:"v2",value:new THREE.Vector2},this.system.register(this)},update:function(a){var t=this.data;this.rebuild(t.rings!==a.rings||t.samples!==a.samples,t.blurRadius!==a.blurRadius),this.uniforms.depthCutoff.value=t.depthCutoff,this.uniforms.intensity.value=t.intensity,this.uniforms.maxDepth.value=t.maxDepth,this.SAOMaterial.uniforms.bias.value=t.bias,this.SAOMaterial.uniforms.scale.value=t.scale,this.SAOMaterial.uniforms.kernelRadius.value=t.radius,this.hBlurMaterial.uniforms.depthCutoff.value=t.depthCutoff,this.vBlurMaterial.uniforms.depthCutoff.value=t.depthCutoff},rebuild:function(a,t){var e=this.data;a&&(this.SAOMaterial&&this.SAOMaterial.dispose(),this.SAOMaterial=this.system.materialize(s(!0)),this.SAOMaterial.defines.RINGS=parseInt(e.rings)+".",this.SAOMaterial.defines.SAMPLES=parseInt(e.samples)+".",this.SAOMaterial.uniforms.cameraFar=this.system.cameraFar,this.SAOMaterial.uniforms.cameraNear=this.system.cameraNear),t&&(this.hBlurMaterial&&(this.hBlurMaterial.dispose(),this.vBlurMaterial.dispose()),this.hBlurMaterial=this.system.materialize(i(e.blurRadius,e.blurRadius/2,new THREE.Vector2(1,0))),this.vBlurMaterial=this.system.materialize(i(e.blurRadius,e.blurRadius/2,new THREE.Vector2(0,1))),this.hBlurMaterial.uniforms.size=this.sizeUniform,this.vBlurMaterial.uniforms.size=this.sizeUniform,this.hBlurMaterial.uniforms.cameraFar=this.system.cameraFar,this.hBlurMaterial.uniforms.cameraNear=this.system.cameraNear,this.vBlurMaterial.uniforms.cameraFar=this.system.cameraFar,this.vBlurMaterial.uniforms.cameraNear=this.system.cameraNear)},setSize:function(a,t){a=Math.ceil(a*this.data.ratio),t=Math.ceil(t*this.data.ratio),this.sizeUniform.value.set(a,t),this.renderTargets.forEach(function(e){e.setSize(a,t)})},tock:function(a){this.system.isActive(this,!0)&&(this.SAOMaterial.uniforms.cameraInverseProjectionMatrix.value.getInverse(this.el.sceneEl.camera.projectionMatrix),this.SAOMaterial.uniforms.cameraProjectionMatrix.value=this.el.sceneEl.camera.projectionMatrix,this.SAOMaterial.uniforms.tDepth.value=this.el.sceneEl.renderTarget.depthTexture,this.system.renderPass(this.SAOMaterial,this.renderTargets[0],!0),this.data.blurRadius&&(this.hBlurMaterial.uniforms.tDiffuse.value=this.renderTargets[0].texture,this.system.renderPass(this.hBlurMaterial,this.renderTargets[1],!0),this.vBlurMaterial.uniforms.tDiffuse.value=this.renderTargets[1].texture,this.system.renderPass(this.vBlurMaterial,this.renderTargets[0],!0)))},remove:function(){this.SAOMaterial.dispose(),this.hBlurMaterial.dispose(),this.vBlurMaterial.dispose(),this.renderTargets[0].dispose(),this.renderTargets[1].dispose(),this.system.unregister(this)},includes:["packing"],depth:!0,diffuse:!0,fragment:["float $unpackDepth(vec3 pack) {","	float depth = dot( pack, 1.0 / vec3(1.0, 256.0, 256.0*256.0) );","	return depth * (256.0*256.0*256.0) / (256.0*256.0*256.0 - 1.0);","}","void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth) {","   vec4 texel = texture2D($texture, uv);","   float z = perspectiveDepthToViewZ( $unpackDepth(texel.xyz), cameraNear, cameraFar );","   float Z = perspectiveDepthToViewZ( depth, cameraNear, cameraFar );","   color.rgb *= abs(z-Z) > $depthCutoff || Z >= $maxDepth * cameraFar ? 1.0  :  1.0 - texel.a * $intensity;","}"].join(`
`)}),ie}var oe={},le;function Ce(){return le||(le=1,AFRAME.registerComponent("lighty",{schema:{color:{type:"color",default:"#000000"},radius:{type:"number",default:0},decay:{type:"number",default:1}},init:function(){this.el.sceneEl.systems.effects.addLight(this)},remove:function(){this.el.sceneEl.systems.effects.removeLight(this)}})),oe}var ue;function Ae(){return ue||(ue=1,pe(),ge(),Ee(),Te(),Re(),be(),Se(),De(),Ce()),$}var ce={},he;function Fe(){if(he)return ce;he=1,THREE.ShaderChunk.lights_pars_maps+=["#if defined TILED_FORWARD","uniform vec4 tileData;","uniform sampler2D tileTexture;","uniform sampler2D lightTexture;","#endif"].join(`
`),THREE.ShaderChunk.lights_fragment_maps+=["","#if defined TILED_FORWARD","vec2 tUv = floor(gl_FragCoord.xy / tileData.xy * 32.) / 32. + tileData.zw;","vec4 tile = texture2D(tileTexture, tUv);","for (int i=0; i < 4; i++) {","	float tileVal = tile.x * 255.;","  	tile.xyzw = tile.yzwx;","	if(tileVal == 0.){ continue; }","  	float tileDiv = 128.;","	for (int j=0; j < 8; j++) {","  		if (tileVal < tileDiv) {  tileDiv *= 0.5; continue; }","		tileVal -= tileDiv;","		tileDiv *= 0.5;","  		PointLight pointlight;","		float uvx = (float(8 * i + j) + 0.5) / 32.;","  		vec4 lightData = texture2D(lightTexture, vec2(uvx, 0.));","  		vec4 lightColor = texture2D(lightTexture, vec2(uvx, 1.));","  		pointlight.position = lightData.xyz;","  		pointlight.distance = lightData.w;","  		pointlight.color = lightColor.rgb;","  		pointlight.decay = lightColor.a;","  		getPointDirectLightIrradiance( pointlight, geometry, directLight );","		RE_Direct( directLight, geometry, material, reflectedLight );","	}","}","#endif"].join(`
`);var s=AFRAME.utils,i=new THREE.CubeTextureLoader,a={};AFRAME.registerShader("standard-fx",{schema:{ambientOcclusionMap:{type:"map"},ambientOcclusionMapIntensity:{default:1},ambientOcclusionTextureOffset:{type:"vec2"},ambientOcclusionTextureRepeat:{type:"vec2",default:{x:1,y:1}},color:{type:"color"},displacementMap:{type:"map"},displacementScale:{default:1},displacementBias:{default:.5},displacementTextureOffset:{type:"vec2"},displacementTextureRepeat:{type:"vec2",default:{x:1,y:1}},emissive:{type:"color",default:"#000"},emissiveIntensity:{default:1},envMap:{default:""},fog:{default:!0},height:{default:256},metalness:{default:0,min:0,max:1},metalnessMap:{type:"map"},metalnessTextureOffset:{type:"vec2"},metalnessTextureRepeat:{type:"vec2",default:{x:1,y:1}},normalMap:{type:"map"},normalScale:{type:"vec2",default:{x:1,y:1}},normalTextureOffset:{type:"vec2"},normalTextureRepeat:{type:"vec2",default:{x:1,y:1}},offset:{type:"vec2",default:{x:0,y:0}},repeat:{type:"vec2",default:{x:1,y:1}},roughness:{default:.5,min:0,max:1},roughnessMap:{type:"map"},roughnessTextureOffset:{type:"vec2"},roughnessTextureRepeat:{type:"vec2",default:{x:1,y:1}},sphericalEnvMap:{type:"map"},src:{type:"map"},width:{default:512},wireframe:{default:!1},wireframeLinewidth:{default:2}},init:function(e){this.material=new THREE.MeshStandardMaterial(t(e)),s.material.updateMap(this,e),e.normalMap&&s.material.updateDistortionMap("normal",this,e),e.displacementMap&&s.material.updateDistortionMap("displacement",this,e),e.ambientOcclusionMap&&s.material.updateDistortionMap("ambientOcclusion",this,e),e.metalnessMap&&s.material.updateDistortionMap("metalness",this,e),e.roughnessMap&&s.material.updateDistortionMap("roughness",this,e),this.updateEnvMap(e),this.material.onBeforeCompile=function(r){r.uniforms.tileData=State.tileData,r.uniforms.tileTexture=State.tileTexture,r.uniforms.lightTexture=State.lightTexture,r.defines.TILED_FORWARD=1}},update:function(e){this.updateMaterial(e),s.material.updateMap(this,e),e.normalMap&&s.material.updateDistortionMap("normal",this,e),e.displacementMap&&s.material.updateDistortionMap("displacement",this,e),e.ambientOcclusionMap&&s.material.updateDistortionMap("ambientOcclusion",this,e),e.metalnessMap&&s.material.updateDistortionMap("metalness",this,e),e.roughnessMap&&s.material.updateDistortionMap("roughness",this,e),this.updateEnvMap(e)},updateMaterial:function(e){var r=this.material;e=t(e),Object.keys(e).forEach(function(n){r[n]=e[n]})},updateEnvMap:function(e){var r=this,n=this.material,o=e.envMap,l=e.sphericalEnvMap;if(!o&&!l||this.isLoadingEnvMap){n.envMap=null,n.needsUpdate=!0;return}if(this.isLoadingEnvMap=!0,l){this.el.sceneEl.systems.material.loadTexture(l,{src:l},function(m){r.isLoadingEnvMap=!1,m.mapping=THREE.SphericalReflectionMapping,n.envMap=m,s.material.handleTextureEvents(r.el,m),n.needsUpdate=!0});return}if(a[o]){a[o].then(function(u){r.isLoadingEnvMap=!1,n.envMap=u,s.material.handleTextureEvents(r.el,u),n.needsUpdate=!0});return}a[o]=new Promise(function(u){s.srcLoader.validateCubemapSrc(o,function(h){i.load(h,function(c){r.isLoadingEnvMap=!1,n.envMap=c,s.material.handleTextureEvents(r.el,c),u(c)})})})}});function t(e){var r={color:new THREE.Color(e.color),emissive:new THREE.Color(e.emissive),emissiveIntensity:e.emissiveIntensity,fog:e.fog,metalness:e.metalness,roughness:e.roughness,wireframe:e.wireframe,wireframeLinewidth:e.wireframeLinewidth};return e.normalMap&&(r.normalScale=e.normalScale),e.ambientOcclusionMap&&(r.aoMapIntensity=e.ambientOcclusionMapIntensity),e.displacementMap&&(r.displacementScale=e.displacementScale,r.displacementBias=e.displacementBias),r}return ce}var fe;function He(){if(fe)return V;if(fe=1,!window.AFRAME){var s=function(t,e){this.el=t,this.el,this.id=e,this.attrName=this.name+(e?"__"+e:""),this.el.components[this.attrName]=this,this.data={}},i=function(t){this.el=this.sceneEl=t,this.el.systems[this.name]=this};AFRAME={components:{},systems:{},registerShader:function(){}},AFRAME.registerComponent=function(t,e){var r,n={};return Object.keys(e).forEach(function(o){n[o]={value:e[o],writable:!0}}),r=function(o,l,u){s.call(this,o,l,u)},r.prototype=Object.create(s.prototype,n),r.prototype.name=t,r.prototype.constructor=r,AFRAME.components[t]=r,r},AFRAME.registerSystem=function(t,e){var r,n={};return Object.keys(e).forEach(function(o){n[o]={value:e[o],writable:!0}}),r=function(o,l,u){i.call(this,o,l,u)},r.prototype=Object.create(i.prototype,n),r.prototype.name=t,r.prototype.constructor=r,AFRAME.systems[t]=r,r};var a=function(t,e,r){this.sceneEl=this,this.renderTarget=null,this.renderer=t,this.object3D=e,this.cameras=Array.isArray(r)?r:[r],this.components={},this.systems={},this.isPlaying=!0,this.systems.effects=new AFRAME.systems.effects(this),this.systems.effects.init()};a.prototype=Object.create({},{chain:{value:function(t){var e=this.systems.effects,r=e.data;e.data=t,e.update(r),e.tick(0,0)}},camera:{set:function(t){this.cameras=Array.isArray(t)?t:[t]},get:function(){return this.cameras[0]}},scene:{set:function(t){this.object3D=t},get:function(){return this.object3D}},init:{value:function(t){this.remove(t);var e=t.split("__"),r=AFRAME.components[e[0]];if(!r)return null;var n=new r(this,e[1]);if(n.schema.type||n.schema.default)n.data=n.schema.default;else for(var o in n.schema)n.data[o]=n.schema[o].default;return n.init&&n.init(),n.update&&n.update({}),n}},update:{value:function(t,e){var r=this.components[t];if(r||(r=this.init(t)),!(!r||e===void 0)){var n=r.data,o=r.data;if(r.schema,r.schema.type||r.schema.default)r.data=e;else{n={};for(var l in o)n[l]=o[l],e[l]&&(o[l]=e[l])}r.update&&r.update(n)}}},remove:{value:function(t){var e=this.components[t];e&&e.remove&&e.remove(),delete this.components[t]}},render:{value:function(t){var e=this.components,r=this.systems.effects,n=this.time?t-this.time:0;this.time=t;for(var o in e){var l=e[o];l.tick&&l.tick(t,n)}r.tick(t,n),r.cameras=this.cameras;for(var o in e){var l=e[o];l.tock&&l.tock(t,n)}r.tock(t,n)}}}),window.AFRAME.Effects=a}return de(),Ae(),Fe(),V}He();document.querySelector("a-scene").addEventListener("loaded",function(){const s=document.querySelector("#clickable-sombrero"),i=document.querySelector("#info-container");let a=!1;s.addEventListener("click",function(){a=!a,i.setAttribute("visible",a.toString())})});ve.registerComponent("toggle-text",{schema:{groupId:{type:"selector"}},init:function(){const s=this.el,i=this.data.groupId;s.addEventListener("click",()=>{if(i){const a=i.getAttribute("visible")===!0||i.getAttribute("visible")==="true";i.setAttribute("visible",!a),console.log(`Grupo ahora es ${a?"oculto":"visible"}`)}else console.error("No se encontró el grupo asociado.")})}});const Pe=document.querySelectorAll(".clickable");Pe.forEach(s=>{s.addEventListener("click",function(){window.open(s.getAttribute("href"),"_blank")})});
